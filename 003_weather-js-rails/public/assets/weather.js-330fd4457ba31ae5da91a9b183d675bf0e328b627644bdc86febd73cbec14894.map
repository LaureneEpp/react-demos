{
  "version": 3,
  "sources": ["../../javascript/weather.js"],
  "sourcesContent": ["document.addEventListener(\"DOMContentLoaded\", () => {\n  const cityInput = document.getElementById(\"city-input\");\n  const weatherDisplay = document.getElementById(\"weather-display\");\n  const errorDisplay = document.getElementById(\"error-display\");\n  const errorPopup = document.getElementById(\"error-popup\");\n  const errorMessage = document.getElementById(\"error-message\");\n\n  let weatherData;\n  const selectedInfoTypes = [];\n\n  document\n    .getElementById(\"weather-form\")\n    .addEventListener(\"submit\", (event) => {\n      event.preventDefault();\n\n      const city = cityInput.value.trim();\n\n      if (!city) {\n        handleApiError(\"Enter a correct city\");\n        weatherDisplay.textContent = \"\";\n        return;\n      }\n\n      fetch(`/weather?city=${city}`)\n        .then((response) => {\n          if (response.status === 200) {\n            return response.json();\n          } else {\n            throw new Error(\"Fail to fetch weather data!\");\n          }\n        })\n        .then((data) => {\n          weatherData = data;\n          displayWeather(weatherData);\n          errorDisplay.textContent = \"\";\n          // appendInfoButton();\n          createInfoButtons();\n        })\n        .catch((error) => {\n          handleApiError(error.message);\n        });\n    });\n\n  function displayWeather(data) {\n    if (!data) {\n      handleApiError(\"Weather data is undefined.\");\n      return;\n    }\n\n    const { name, sys, main, weather } = data;\n\n    const weatherHtml = `\n        <div class=\"card bg_blue-dark-color p-3 primary-color\" style=\"width: 18rem;\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title d-flex flex-row\">\n\n            <span class=\"ms-2\">Weather in ${name} in ${sys.country}</spaan>\n            </h5>\n            <p class=\"card-text\"><span class=\"fw-semibold\">Temperature:</span> ${main.temp}\u00B0C</p>\n            <p class=\"card-text\"><span class=\"fw-semibold\">Conditions:</span> ${weather[0].description}</p>\n          </div>\n        </div>\n      `;\n\n    weatherDisplay.innerHTML = weatherHtml;\n    errorDisplay.textContent = \"\";\n  }\n\n  function handleApiError(errorMessage) {\n    showError(errorMessage);\n    weatherDisplay.textContent = \"\";\n  }\n\n  errorPopup.addEventListener(\"click\", hideError);\n\n  document.addEventListener(\"click\", (event) => {\n    if (event.target === errorPopup) {\n      hideError();\n    }\n  });\n\n  function showError(message) {\n    errorMessage.textContent = message;\n    errorPopup.style.display = \"flex\";\n  }\n\n  function hideError() {\n    errorPopup.style.display = \"none\";\n  }\n\n  function createInfoButtons() {\n    console.log('Test creation button')\n    const infoTypesContainer = document.createElement(\"div\");\n    infoTypesContainer.setAttribute('id', \"info-types-container\");\n    console.log(infoTypesContainer);\n    const infoTypes = [\n      \"Temperature min\",\n      \"Temperature max\",\n      \"Humidity\",\n      \"Wind Speed\",\n      \"Sunrise\",\n      \"Sunset\",\n      \"Pressure\",\n      \"Longitude\",\n      \"Latitude\",\n      \"Rain\",\n      \"Clouds\",\n    ];\n\n    infoTypes.forEach((infoType) => {\n      const infoButton = document.createElement(\"button\");\n      infoButton.textContent = infoType;\n      // infoButton.classList.add(\"btn\", \"btn-primary\");\n      // infoButton.addEventListener(\"click\", () => {\n      //   addInfoType(infoType);\n      // });\n      // infoTypesContainer.append(infoType);\n      console.log(infoType)\n    });\n    // weatherDisplay.append(infoTypesContainer)\n  }\n\n  // function addInfoType() {\n  //   if (!selectedInfoTypes.includes(infoType)) {\n  //     selectedInfoTypes.push(infoType);\n  //     displaySelectedInfo();\n  //   }\n  // }\n\n  // function displaySelectedInfo() {\n  //   const selectedInfoContainer = document.createElement('div');\n  //   selectedInfoContainer.id = \"selected-info-container\";\n  //   selectedInfoContainer.classList.add('card', 'bg_blue-dark-color', 'p-3', 'primary-color', 'mt-3')\n  //   selectedInfoContainer.innerHTML = \"\";\n\n  // }\n\n  // function displayMoreInfo(data) {\n  //   if (!data) {\n  //     errorDisplay.textContent = \"Weather data is undefined.\";\n  //     return;\n  //   }\n\n  //   const infoTypesContainerHtml = `\n  //   <div id=\"info-types-container\" class=\"mt-3\">\n  //   </div>\n  //   `;\n\n  //   const selectedInfoContainerHtml = `\n  //   <div id=\"selected-info-container\" class=\"mt-3\">\n  //   </div>\n  //   `;\n\n  //   const { main, wind, sys } = data;\n  //   const moreInfoHtml = `\n  //     <div class=\"card bg_blue-dark-color p-3 primary-color mt-3\" style=\"width: 18rem;\">\n  //       <div class=\"card-body\">\n  //         <p class=\"card-text\"><span class=\"fw-semibold\">Humidity:</span> ${\n  //           main.humidity\n  //         }%</p>\n  //         <p class=\"card-text\"><span class=\"fw-semibold\">Wind Speed:</span> ${\n  //           wind.speed\n  //         } m/s</p>\n  //         <p class=\"card-text\"><span class=\"fw-semibold\">Sunrise:</span> ${new Date(\n  //           sys.sunrise * 1000\n  //         ).toLocaleTimeString()}</p>\n  //         <p class=\"card-text\"><span class=\"fw-semibold\">Sunset:</span> ${new Date(\n  //           sys.sunset * 1000\n  //         ).toLocaleTimeString()}</p>\n  //       </div>\n  //     </div>\n  //     `;\n\n  //   const moreInfoContainer = document.createElement(\"div\");\n  //   moreInfoContainer.innerHTML = moreInfoHtml;\n  //   weatherDisplay.appendChild(moreInfoContainer);\n  // }\n});\n"],
  "mappings": ";;AAAA,WAAS,iBAAiB,oBAAoB,MAAM;AAClD,UAAM,YAAY,SAAS,eAAe,YAAY;AACtD,UAAM,iBAAiB,SAAS,eAAe,iBAAiB;AAChE,UAAM,eAAe,SAAS,eAAe,eAAe;AAC5D,UAAM,aAAa,SAAS,eAAe,aAAa;AACxD,UAAM,eAAe,SAAS,eAAe,eAAe;AAE5D,QAAI;AACJ,UAAM,oBAAoB,CAAC;AAE3B,aACG,eAAe,cAAc,EAC7B,iBAAiB,UAAU,CAAC,UAAU;AACrC,YAAM,eAAe;AAErB,YAAM,OAAO,UAAU,MAAM,KAAK;AAElC,UAAI,CAAC,MAAM;AACT,uBAAe,sBAAsB;AACrC,uBAAe,cAAc;AAC7B;AAAA,MACF;AAEA,YAAM,iBAAiB,IAAI,EAAE,EAC1B,KAAK,CAAC,aAAa;AAClB,YAAI,SAAS,WAAW,KAAK;AAC3B,iBAAO,SAAS,KAAK;AAAA,QACvB,OAAO;AACL,gBAAM,IAAI,MAAM,6BAA6B;AAAA,QAC/C;AAAA,MACF,CAAC,EACA,KAAK,CAAC,SAAS;AACd,sBAAc;AACd,uBAAe,WAAW;AAC1B,qBAAa,cAAc;AAE3B,0BAAkB;AAAA,MACpB,CAAC,EACA,MAAM,CAAC,UAAU;AAChB,uBAAe,MAAM,OAAO;AAAA,MAC9B,CAAC;AAAA,IACL,CAAC;AAEH,aAAS,eAAe,MAAM;AAC5B,UAAI,CAAC,MAAM;AACT,uBAAe,4BAA4B;AAC3C;AAAA,MACF;AAEA,YAAM,EAAE,MAAM,KAAK,MAAM,QAAQ,IAAI;AAErC,YAAM,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,4CAKoB,IAAI,OAAO,IAAI,OAAO;AAAA;AAAA,iFAEe,KAAK,IAAI;AAAA,gFACV,QAAQ,CAAC,EAAE,WAAW;AAAA;AAAA;AAAA;AAKlG,qBAAe,YAAY;AAC3B,mBAAa,cAAc;AAAA,IAC7B;AAEA,aAAS,eAAeA,eAAc;AACpC,gBAAUA,aAAY;AACtB,qBAAe,cAAc;AAAA,IAC/B;AAEA,eAAW,iBAAiB,SAAS,SAAS;AAE9C,aAAS,iBAAiB,SAAS,CAAC,UAAU;AAC5C,UAAI,MAAM,WAAW,YAAY;AAC/B,kBAAU;AAAA,MACZ;AAAA,IACF,CAAC;AAED,aAAS,UAAU,SAAS;AAC1B,mBAAa,cAAc;AAC3B,iBAAW,MAAM,UAAU;AAAA,IAC7B;AAEA,aAAS,YAAY;AACnB,iBAAW,MAAM,UAAU;AAAA,IAC7B;AAEA,aAAS,oBAAoB;AAC3B,cAAQ,IAAI,sBAAsB;AAClC,YAAM,qBAAqB,SAAS,cAAc,KAAK;AACvD,yBAAmB,aAAa,MAAM,sBAAsB;AAC5D,cAAQ,IAAI,kBAAkB;AAC9B,YAAM,YAAY;AAAA,QAChB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAEA,gBAAU,QAAQ,CAAC,aAAa;AAC9B,cAAM,aAAa,SAAS,cAAc,QAAQ;AAClD,mBAAW,cAAc;AAMzB,gBAAQ,IAAI,QAAQ;AAAA,MACtB,CAAC;AAAA,IAEH;AAAA,EAyDF,CAAC;",
  "names": ["errorMessage"]
}
